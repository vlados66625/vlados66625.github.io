(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _playButton = require("./modules/play-button");
var _toggleButton = require("./modules/toggle-button");
var _duplicatesAdvantages = require("./modules/duplicatesAdvantages");
// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();

  // Modules
  // ---------------------------------
  (0, _toggleButton.addEvtToggleButton)();
  (0, _duplicatesAdvantages.duplicatesAdvantages)();
  window.addEventListener('resize', _duplicatesAdvantages.duplicatesAdvantages);

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    (0, _playButton.addEvtVideo)();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./modules/duplicatesAdvantages":2,"./modules/play-button":3,"./modules/toggle-button":4,"./utils/ios-vh-fix":6}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.duplicatesAdvantages = void 0;
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var duplicatesAdvantages = function () {
  var originalBlock = document.querySelector('.advantages__swiper-wrapper');
  var addedElements = false;
  return function () {
    if (originalBlock && window.innerWidth >= 1200) {
      if (!addedElements) {
        var clonedContent = originalBlock.cloneNode(true).childNodes;
        originalBlock.append.apply(originalBlock, _toConsumableArray(clonedContent));
        addedElements = true;
      }
    } else if (originalBlock && window.innerWidth < 1200) {
      if (addedElements) {
        var elementsToRemove = originalBlock.querySelectorAll('.advantages__swiper-slide');
        var addedElementCount = elementsToRemove.length * 0.5;
        addedElements = false;
        elementsToRemove.forEach(function (element, index) {
          if (index < addedElementCount) {
            element.remove();
          }
        });
      }
    }
  };
}();
exports.duplicatesAdvantages = duplicatesAdvantages;

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stopVideo = exports.addEvtVideo = void 0;
var playButton = document.querySelector('[data-action="play-button"]');
var video = document.querySelector('[data-action="gym-video"]');
var addEvtVideo = function addEvtVideo() {
  if (playButton && video) {
    video.controls = false;
    playButton.addEventListener('click', function () {
      video.play();
      playButton.classList.add('is-close');
      video.controls = true;
    });
    video.addEventListener('pause', function () {
      playButton.classList.remove('is-close');
      video.controls = false;
    });
    video.addEventListener('play', function () {
      playButton.classList.add('is-close');
      video.controls = true;
    });
  }
};
exports.addEvtVideo = addEvtVideo;
var stopVideo = function stopVideo() {
  if (video) {
    video.pause();
  }
};
exports.stopVideo = stopVideo;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addEvtToggleButton = void 0;
var navMain = document.querySelector('.header-top__navigation');
var navToggle = document.querySelector('.header-top__toggle');
var navLogo = document.querySelector('.header-top__logo');
var navTelephoneIcon = document.querySelector('.header-top__telephone');
var closeButton = document.querySelector('.header-top__close-button');
var navMainUl = navMain.querySelector('Ul');
var addEvtToggleButton = function addEvtToggleButton() {
  if (navMain && navToggle && navLogo && navTelephoneIcon) {
    var openedNav = function openedNav() {
      navMain.classList.remove('header-top__navigation--closed');
      navMain.classList.add('header-top__navigation--opened');
      navToggle.classList.remove('header-top__toggle--closed');
      navToggle.classList.add('header-top__toggle--opened');
      navLogo.classList.add('header-top__logo-icon--dark');
      navTelephoneIcon.classList.add('header-top__telephone--dark');
      document.body.style.overflow = 'hidden';
    };
    var closedNav = function closedNav() {
      navMain.classList.add('header-top__navigation--closed');
      navMain.classList.remove('header-top__navigation--opened');
      navToggle.classList.add('header-top__toggle--closed');
      navToggle.classList.remove('header-top__toggle--opened');
      navLogo.classList.remove('header-top__logo-icon--dark');
      navTelephoneIcon.classList.remove('header-top__telephone--dark');
      document.body.style.overflow = 'auto';
    };
    navToggle.addEventListener('click', function () {
      if (navMain.classList.contains('header-top__navigation--closed')) {
        openedNav();
      } else {
        closedNav();
      }
    });
    closeButton.addEventListener('click', function () {
      closedNav();
    });
    document.addEventListener('click', function (evt) {
      if (window.innerWidth < 1200 && navMainUl.contains(evt.target) && evt.target.tagName === 'A') {
        closedNav();
      }
    });
  }
};
exports.addEvtToggleButton = addEvtToggleButton;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};
exports.iosChecker = iosChecker;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};
exports.iosVhFix = iosVhFix;

},{"./ios-checker":5}]},{},[1])


//# sourceMappingURL=main.min.js.map
